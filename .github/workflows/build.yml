name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.58
      - name: hadolint
        uses: hadolint/hadolint-action@v3.1.0

  go-build:
    name: Go build
    runs-on: ubuntu-latest
    # permissions:
    #   id-token: write
    #   contents: read
    #   attestations: write
    env:
      BUILD_ID: hops
      EXECUTABLE: hops
      VERSION: ${{ github.ref_type == 'tag' && github.ref_name || format('ci-{0}', github.sha) }}
      CGO_ENABLED: 0
    outputs:
      artifact-id: ${{ steps.upload.outputs.artifact-id }}
    strategy:
      matrix:
        GOOS:
          - linux
          - windows
          - darwin
        GOARCH:
          - amd64
          - arm64
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      # Go build
      - name: Build ${{env.EXECUTABLE}}
        id: build
        env:
          EXECUTABLE_PATH: bin/${{env.EXECUTABLE}}
        run: |
          go build \
            -trimpath -ldflags="-s -w -X 'main.version=${{env.VERSION}}'" \
            -o ${{env.EXECUTABLE_PATH}} \
            ./cmd/${{env.EXECUTABLE}}
          echo "executable-path=${{env.EXECUTABLE_PATH}}" >> $GITHUB_OUTPUT

      # - uses: actions/attest-build-provenance@v1
      #   id: attest
      #   with:
      #     subject-path: ${{steps.build.outputs.executable-path}}

      - name: Create archive
        id: archive
        env:
          ARCHIVE_DIR: ${{env.BUILD_ID}}/${{env.VERSION}}
          ARCHIVE_PATH: ${{env.BUILD_ID}}--${{matrix.GOOS}}--${{matrix.GOARCH}}.tar
        # mv ${{ steps.attest.outputs.bundle-path }} ${{env.ARCHIVE_DIR}}/
        run: |
          mkdir -p ${{env.ARCHIVE_DIR}}/bin/
          mv ${{ steps.build.outputs.executable-path }} ${{env.ARCHIVE_DIR}}/bin/
          tar -czvf ${{env.ARCHIVE_PATH}} ${{env.ARCHIVE_DIR}}/
          echo "archive-path=${{env.ARCHIVE_PATH}}" >> $GITHUB_OUTPUT

      - name: Upload build artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.BUILD_ID}}--${{matrix.GOOS}}--${{matrix.GOARCH}}
          path: |
            ${{steps.archive.outputs.archive-path}}
