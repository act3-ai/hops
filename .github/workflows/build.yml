# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CGO_ENABLED: 0
  EXECUTABLE: hops
  VERSION: ${{ github.ref_type == 'tag' && github.ref_name || format('{0}-{1}', github.workflow, github.run_number) }}

permissions:
  id-token: write
  contents: read
  attestations: write

jobs:
  go-build:
    name: Go build
    runs-on: ubuntu-latest
    env:
      BUILD_ID: hops
      VERSION: ${{ github.ref_type == 'tag' && github.ref_name || format('{0}-{1}', github.workflow, github.run_number) }}
    outputs:
      artifact-id: ${{ steps.upload.outputs.artifact-id }}
    strategy:
      matrix:
        GOOS:
          - linux
          - windows
          - darwin
        GOARCH:
          - amd64
          - arm64
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
        name: Check out repo

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      # Go build
      - name: Build ${{env.EXECUTABLE}}
        id: build
        run: |
          go build \
            -trimpath -ldflags="-s -w -X 'main.version=${{env.VERSION}}'" \
            -o artifacts/${{env.EXECUTABLE}} \
            ./cmd/${{env.EXECUTABLE}}

      - uses: actions/attest-build-provenance@v1
        id: attest
        with:
          subject-path: artifacts/${{env.EXECUTABLE}}

      - name: Upload build artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.BUILD_ID}}--${{matrix.GOOS}}--${{matrix.GOARCH}}
          path: |
            artifacts/${{env.EXECUTABLE}}
            ${{steps.attest.outputs.bundle-path}}

  go-build-fips:
    name: Go build FIPS
    runs-on: ubuntu-latest
    env:
      BUILD_ID: hops-fips
      VERSION: ${{ github.ref_type == 'tag' && github.ref_name || format('{0}-{1}', github.workflow, github.run_number) }}-fips
    outputs:
      artifact-id: ${{ steps.upload.outputs.artifact-id }}
    strategy:
      matrix:
        GOOS:
          - linux
          # - windows
          # - darwin
        GOARCH:
          - amd64
          # - arm64
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
        name: Check out repo

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      # Go Boring FIPS 140-2 build
      # See https://kupczynski.info/posts/fips-golang/ for more information
      - name: Build ${{env.EXECUTABLE}} FIPS
        run: |
          env CGO_ENABLED=1 GOEXPERIMENT=boringcrypto \
          go build \
            -trimpath -ldflags="-s -w -X 'main.version=${{env.VERSION}}-fips'" \
            -o artifacts/${{env.EXECUTABLE}} \
            ./cmd/${{env.EXECUTABLE}}

      - uses: actions/attest-build-provenance@v1
        id: attest
        with:
          subject-path: artifacts/${{env.EXECUTABLE}}

      - id: upload
        name: Upload FIPS build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.BUILD_ID}}--${{matrix.GOOS}}--${{matrix.GOARCH}}
          path: |
            artifacts/${{env.EXECUTABLE}}
            ${{steps.attest.outputs.bundle-path}}
