# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
version: 1

builds:
  - id: hops
    main: ./cmd/hops
    binary: bin/hops
    env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    ldflags:
      - "-s -w -X main.version={{.Version}}"
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64

archives:
  - id: hops
    builds:
      - hops
    format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .Binary }}_{{ .Os }}_{{ .Arch }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

dockers:
  # - id: hops
  #   goos: linux
  #   goarch: amd64
  #   ids:
  #     - hops
  #   image_templates:
  #     - "ghcr.io/act3-ai/hops:{{ .Tag }}"
  #     - "ghcr.io/act3-ai/hops:v{{ .Major }}"
  #     - "ghcr.io/act3-ai/hops:v{{ .Major }}.{{ .Minor }}"
  #     - "{{if not .Prerelease}}ghcr.io/act3-ai/hops:latest{{end}}"
  #   build_flag_templates:
  #     - "--build-arg=HOPS_EXECUTABLE=bin/hops"
  - id: hops-amd64
    goos: linux
    goarch: amd64
    ids:
      - hops
    image_templates:
      - "ghcr.io/act3-ai/hops:{{ .Tag }}-amd64"
      - "ghcr.io/act3-ai/hops:v{{ .Major }}-amd64"
      - "ghcr.io/act3-ai/hops:v{{ .Major }}.{{ .Minor }}-amd64"
      - "{{if not .Prerelease}}ghcr.io/act3-ai/hops:latest-amd64{{end}}"
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
      - "--build-arg=HOPS_EXECUTABLE=bin/hops"
  - id: hops-amd64
    goos: linux
    goarch: arm64
    ids:
      - hops
    image_templates:
      - "ghcr.io/act3-ai/hops:{{ .Tag }}-arm64"
      - "ghcr.io/act3-ai/hops:v{{ .Major }}-arm64"
      - "ghcr.io/act3-ai/hops:v{{ .Major }}.{{ .Minor }}-arm64"
      - "{{if not .Prerelease}}ghcr.io/act3-ai/hops:latest-arm64{{end}}"
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"
      - "--build-arg=HOPS_EXECUTABLE=bin/hops"

docker_manifests:
  - id: hops
    name_template: "ghcr.io/act3-ai/hops:{{ .Version }}"
    image_templates:
      - "ghcr.io/act3-ai/hops:{{ .Version }}-amd64"
      - "ghcr.io/act3-ai/hops:{{ .Version }}-arm64"
  - id: hops-major
    name_template: "ghcr.io/act3-ai/hops:v{{ .Major }}"
    image_templates:
      - "ghcr.io/act3-ai/hops:{{ .Version }}-amd64"
      - "ghcr.io/act3-ai/hops:{{ .Version }}-arm64"
  - id: hops-majorminor
    name_template: "ghcr.io/act3-ai/hops:v{{ .Major }}.{{ .Minor }}"
    image_templates:
      - "ghcr.io/act3-ai/hops:{{ .Version }}-amd64"
      - "ghcr.io/act3-ai/hops:{{ .Version }}-arm64"
  - id: hops-latest
    name_template: "{{if not .Prerelease}}ghcr.io/act3-ai/hops:latest{{end}}"
    image_templates:
      - "ghcr.io/act3-ai/hops:{{ .Version }}-amd64"
      - "ghcr.io/act3-ai/hops:{{ .Version }}-arm64"

kos:
  - id: hops
    build: hops
    base_image: cgr.dev/chainguard/static
    labels:
      org.opencontainers.image.title: "hops"
      org.opencontainers.image.revision: "{{.FullCommit}}"
      org.opencontainers.image.version: "{{.Version}}"
      org.opencontainers.image.licenses: "MIT"
      org.opencontainers.image.source: "{{.GitURL}}"
      org.opencontainers.image.documentation: "{{.GitURL}}"
      org.opencontainers.image.url: "{{.GitURL}}"
    repository: ghcr.io/act3-ai/hops/distroless
    platforms:
      - all
    tags:
      - "{{.Tag}}"
      - "v{{ .Major }}"
      - "v{{ .Major }}.{{ .Minor }}"
      - "{{if not .Prerelease}}latest{{end}}"
    creation_time: "{{.CommitTimestamp}}"
    ko_data_creation_time: "{{.CommitTimestamp}}"
    sbom: spdx
    base_import_paths: true

report_sizes: true

release:
  target_commitish: "{{ .Commit }}"
  prerelease: auto

changelog:
  use: github
  groups:
    - title: Features
      regexp: '^feat(\([[:word:]]+\))??!?: .+$'
      order: 0
    - title: "Fixes"
      regexp: '^fix(\([[:word:]]+\))??!?: .+$'
      order: 1
    - title: "Dependency bumps"
      regexp: '^Bump .+$'
      order: 2
    - title: Others
      order: 999
